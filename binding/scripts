module Scripts
  def self.open_log(klass, message, backtrace)
    fn = HiddenChest.filename || "error.log"
    begin
      file = File.open(fn, "w")
    rescue => e
      puts e.class, e.message, e.backtrace
      return
    end
    last = backtrace[-1]
    if last and last[/ruby:in `eval'/i]
      backtrace.pop
    end
    total = backtrace.size
    puts "Backtrace Lines: #{total}"
    header = "Error Type: #{klass}"
    puts header, message
    file.puts header, message
    unless backtrace
      if @sections
        name = HiddenChest.script_name || "None"
        file.puts "Script " + name
        puts name
      end
      file.close
      return
    end
    if total < 1
      file.puts "Backtrace was empty!"
    elsif !@sections
      puts HiddenChest.script_name
      total.times {|n| file.puts "in " + backtrace[n] }
    else
      total.times {|n| file.puts backtrace[n] }
    end
    file.close
    puts backtrace
  end

  def self.setup_error_scene
    if $!.nil?
      return
    end
    HiddenChest.show_backdrop = true
    HiddenChest.error_type = $!.class.to_s
    HiddenChest.error_msg = $!.message
  end

  def self.log
    setup_error_scene
    if HiddenChest.show_backdrop
      open_log($!.class, $!&.message, $!&.backtrace)
      error_handling
    end
  end
end
