module HiddenChest

class Scene
  BITMAPS = %w{app_logo_s01 app_logo_s02 app_logo_s03 app_logo}
  def initialize
    Font.default_outline = true
    @timer = Graphics.frame_rate / 6
    @logo_pos = 0
    @bitmaps = []
    @sprites = []
    @icons =  BITMAPS
    @total = BITMAPS.size
    @name = "HiddenChest"
    @version = VERSION
    @date = RELEASE_DATE
    @author = AUTHOR
    if Game.respond_to?(:setup_screen)
      @custom = true
      @icons = [Game::ICON]
      @total = 1
      if Game::TITLE.size > 0
        @name = Game::TITLE
      end
      if Game::VERSION.size > 0
        @version = Game::VERSION
      end
      if Game::AUTHOR.size > 0
        @author = Game::AUTHOR
      end
      time = Time.now
      @date = sprintf("%4d-%02d-%02d", time.year, time.month, time.day)
    end
  end

  def main
    width, height = Graphics.dimensions
    puts "Width: #{width} x Height: #{height}"
    if HiddenChest.show_backdrop
      @sprites << @bg = Sprite.new
      @bg.z = 0
      @bg.bitmap = Backdrop.bitmap
    end
    unless @custom
      @total.times{|n| @bitmaps << Bitmap.new(@icons[n], nil) }
    end
    @sprites << @blur = Sprite.new
    @blur.z = 11000
    @blur.bitmap = Bitmap.new(width, height)
    @blur.bitmap.fill_rect(Graphics.screen_rect, Color.new(0, 0, 0, 140))
    title_width = 340
    @sprites << @frame = Sprite.new
    @frame.x = (width - title_width) / 2 - 68
    @frame.y = height / 3 - 52
    @frame.z = 11000
    @frame.bitmap = b = Bitmap.new(72, 72)
    b.fill_rect(0, 0, 72, 72, Color.new(0, 80, 255))
    @sprites << @logo = Sprite.new
    @logo.x = @frame.x + 4
    @logo.y = @frame.y + 4
    @logo.z = 11050
    if @custom and !@icons[0].empty?
      @logo.bitmap = Bitmap.new(@icons[0])
    else
      @logo.bitmap = Bitmap.new(@icons[0], nil)
    end
    @sprites << @title = Sprite.new
    @title.x = @logo.x + 76
    @title.y = @logo.y - 24
    @title.z = 11000
    @title.bitmap = b = Bitmap.new(title_width, 128)
    f = b.font
    f.size = 36
    f.outline_size = 4
    f.outline_color.set(0, 80, 255)
    b.draw_text(0, 0, title_width, 36, @name, 1)
    f.size = 23
    f.outline_size = 2
    f.outline_color.set(0, 180, 160)
    b.draw_text(0, 40, title_width, 24, "Version " + @version, 1)
    f.size = 22
    f.outline_color.set(80, 80, 80)
    b.draw_text(0, 68, title_width, 24, "Release Date: " + @date, 1)
    b.draw_text(0, 100, title_width, 24, "by " + @author, 1)
    @sprites << @advice = Sprite.new
    @advice.y = @logo.y + 116
    @advice.z = 11000
    @advice.bitmap = b = Bitmap.new(width, 260)
    f = b.font
    f.size = 28
    f.outline_size = 2
    f.outline_color.set(255, 80, 0)
    b.draw_text(0, 0, width, 36, HiddenChest.error_type, 1)
    f.size = width < 800 ? 18 : 23
    ly = 42
    f.outline_color.set(60, 60, 60)
    msg = HiddenChest.error_msg.split("\n")
    lines = msg.size
    lines.times do |n|
      b.draw_text(0, ly + 28 * n, width, 26, msg[n], 1)
    end
    ly = 42 + lines * 30 + 8
    f.size = 28
    f.outline_color.set(80, 80, 80)
    b.draw_text(0, ly, width, 30, "Click or Press Any Button", 1)
    b.draw_text(0, ly + 34, width, 30, "to close the window", 1)
    Graphics.transition
    Graphics.screenshot
    while $scene
      Graphics.update
      Input.update
      update
    end
    Graphics.freeze
    @sprites.each{|sprite| sprite.dispose }
    @bitmaps.each{|bitmap| bitmap.dispose }
    if HiddenChest.show_backdrop
      Backdrop.clear_bitmap
    end
  end

  def update
    @timer -= 1
    if @timer == 0 and @total > 1
      @timer = Graphics.frame_rate / 4
      @logo_pos = (@logo_pos + 1) % @total
      @logo.bitmap = @icons[@logo_pos]
    end
    if Input.trigger_any?
      $scene = nil
    end
  end
end

end

begin
  Graphics.freeze
  $scene = HiddenChest::Scene.new
  while $scene
    $scene.main
  end
  Graphics.transition(20)
rescue
  print $!.class, "\n", $!.message, "\n", $!.backtrace
end
