module FileIni
  class IniData
    def initialize(name)
      @filename = name
      @lines = []
      @sections = []
      @indexes = {}
      @keys = {}
    end
    attr_accessor :filename, :lines, :sections, :indexes, :keys
  end

  def self.open(filename)
    @ini_data = IniData.new(filename)
    begin
      @ini_data.lines = lines = File.readlines(filename)
    rescue => e
      puts e.class, e.message, e.backtrace
      return @ini_data = nil
    end
    ini_sections = @ini_data.sections
    ini_pos = @ini_data.indexes
    ini_keys = @ini_data.keys
    lines.size.times do |n|
      line = lines[n]
      key, value = line.split(/[\s]{0,}=[\s]{0,}/i)
      if !key
        ini_sections << section = line.chomp
        ini_pos[section] = n
        next
      end
      ini_keys[key] = !value ? "" : value.chomp
      ini_pos[key] = n
    end
  end

  def self.current
    unless @ini_data
      raise "Failed to load INI data!\n" +
            "Did you forget to open that file first?"
      return
    end
    @ini_data.filename
  end

  def self.close
    unless @ini_data
      raise "Failed to close INI file!\n" +
            "Did you forget to open that file first?"
      return
    end
    @ini_data = nil
  end

  def self.entry_not_found(key)
    "Could not find INI entry #{key} in #{@ini_data.filename}!"
  end

  def self.read(key)
    @ini_data.keys[key] || entry_not_found(key)
  end

  def self.write(key, value)
    value = value.to_s
    n = @ini_data.indexes[key]
    unless n
      comment_key = ";" + key
      n = @ini_data.indexes[comment_key] || @ini_data.lines.size
      @ini_data.indexes[key] = n
      @ini_data.keys.delete(comment_key)
    end
    @ini_data.keys[key] = value
    @ini_data.lines[n] = key + "=" + value + "\r\n"
    File.open(@ini_data.filename, "w") {|f| f.puts @ini_data.lines }
  end

  def self.comment_out(key)
    if @ini_data.keys.has_key?(key)
      value = @ini_data.keys.delete(key)
      n = @ini_data.indexes[key]
      key = ";" + key
      @ini_data.keys[key] = value
      @ini_data.lines[n] = key + "=" + value + "\r\n"
      File.open(@ini_data.filename, "w") {|f| f.puts @ini_data.lines }
    else
      puts entry_not_found(key)
      puts "Has the entry been commented out already?"
    end
  end
end
